name: Release on Tag

on:
  push:
    tags:
      - "v*" # 匹配所有以v开头的tag，如v1.0.0

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create filtered archive
        run: |
          # 创建临时目录用于构建过滤后的压缩包
          mkdir -p temp_release

          # 复制所有文件，但排除指定的文件和目录
          rsync -av --exclude='centrifugo/' \
                    --exclude='docker-compose-server.yml' \
                    --exclude='nginx/nginx-server.conf' \
                    --exclude='env.server.example' \
                    --exclude='.git/' \
                    --exclude='temp_release/' \
                    --exclude='logs/' \
                    --exclude='data/' \
                    ./ temp_release/

          # 创建压缩包
          cd temp_release
          tar -czf ../masbate-deploy-${GITHUB_REF#refs/tags/}.tar.gz .
          cd ..

          # 创建zip包
          cd temp_release
          zip -r ../masbate-deploy-${GITHUB_REF#refs/tags/}.zip .
          cd ..

          # 清理临时目录
          rm -rf temp_release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload tar.gz asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./masbate-deploy-${{ github.ref_name }}.tar.gz
          asset_name: masbate-deploy-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload zip asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./masbate-deploy-${{ github.ref_name }}.zip
          asset_name: masbate-deploy-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Cleanup artifacts
        run: |
          rm -f masbate-deploy-${{ github.ref_name }}.tar.gz
          rm -f masbate-deploy-${{ github.ref_name }}.zip
